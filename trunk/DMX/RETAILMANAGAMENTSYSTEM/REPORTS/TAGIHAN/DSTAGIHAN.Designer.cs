//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LOGISTICMANAGAMENTSYSTEM.REPORTS.TAGIHAN {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSTAGIHAN")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSTAGIHAN : global::System.Data.DataSet {
        
        private TAGIHANDataTable tableTAGIHAN;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSTAGIHAN() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSTAGIHAN(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TAGIHAN"] != null)) {
                    base.Tables.Add(new TAGIHANDataTable(ds.Tables["TAGIHAN"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TAGIHANDataTable TAGIHAN {
            get {
                return this.tableTAGIHAN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSTAGIHAN cln = ((DSTAGIHAN)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TAGIHAN"] != null)) {
                    base.Tables.Add(new TAGIHANDataTable(ds.Tables["TAGIHAN"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTAGIHAN = ((TAGIHANDataTable)(base.Tables["TAGIHAN"]));
            if ((initTable == true)) {
                if ((this.tableTAGIHAN != null)) {
                    this.tableTAGIHAN.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSTAGIHAN";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSTAGIHAN.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTAGIHAN = new TAGIHANDataTable();
            base.Tables.Add(this.tableTAGIHAN);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTAGIHAN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSTAGIHAN ds = new DSTAGIHAN();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TAGIHANRowChangeEventHandler(object sender, TAGIHANRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TAGIHANDataTable : global::System.Data.TypedTableBase<TAGIHANRow> {
            
            private global::System.Data.DataColumn columnNO;
            
            private global::System.Data.DataColumn columnAGENT;
            
            private global::System.Data.DataColumn columnTGLDATANGINV;
            
            private global::System.Data.DataColumn columnTGLINV;
            
            private global::System.Data.DataColumn columnNOINV;
            
            private global::System.Data.DataColumn columnJUMLAHTAGIHAN;
            
            private global::System.Data.DataColumn columnJUMLAHBAYAR;
            
            private global::System.Data.DataColumn columnSISA;
            
            private global::System.Data.DataColumn columnTGLBAYAR;
            
            private global::System.Data.DataColumn columnKETERANGAN;
            
            private global::System.Data.DataColumn columnOPT1;
            
            private global::System.Data.DataColumn columnOPT2;
            
            private global::System.Data.DataColumn columnOPT3;
            
            private global::System.Data.DataColumn columnPERIODE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAGIHANDataTable() {
                this.TableName = "TAGIHAN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TAGIHANDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TAGIHANDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOColumn {
                get {
                    return this.columnNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AGENTColumn {
                get {
                    return this.columnAGENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TGLDATANGINVColumn {
                get {
                    return this.columnTGLDATANGINV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TGLINVColumn {
                get {
                    return this.columnTGLINV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOINVColumn {
                get {
                    return this.columnNOINV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JUMLAHTAGIHANColumn {
                get {
                    return this.columnJUMLAHTAGIHAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JUMLAHBAYARColumn {
                get {
                    return this.columnJUMLAHBAYAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SISAColumn {
                get {
                    return this.columnSISA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TGLBAYARColumn {
                get {
                    return this.columnTGLBAYAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KETERANGANColumn {
                get {
                    return this.columnKETERANGAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPT1Column {
                get {
                    return this.columnOPT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPT2Column {
                get {
                    return this.columnOPT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPT3Column {
                get {
                    return this.columnOPT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PERIODEColumn {
                get {
                    return this.columnPERIODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAGIHANRow this[int index] {
                get {
                    return ((TAGIHANRow)(this.Rows[index]));
                }
            }
            
            public event TAGIHANRowChangeEventHandler TAGIHANRowChanging;
            
            public event TAGIHANRowChangeEventHandler TAGIHANRowChanged;
            
            public event TAGIHANRowChangeEventHandler TAGIHANRowDeleting;
            
            public event TAGIHANRowChangeEventHandler TAGIHANRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTAGIHANRow(TAGIHANRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAGIHANRow AddTAGIHANRow(string NO, string AGENT, string TGLDATANGINV, string TGLINV, string NOINV, string JUMLAHTAGIHAN, string JUMLAHBAYAR, string SISA, string TGLBAYAR, string KETERANGAN, string OPT1, string OPT2, string OPT3, string PERIODE) {
                TAGIHANRow rowTAGIHANRow = ((TAGIHANRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NO,
                        AGENT,
                        TGLDATANGINV,
                        TGLINV,
                        NOINV,
                        JUMLAHTAGIHAN,
                        JUMLAHBAYAR,
                        SISA,
                        TGLBAYAR,
                        KETERANGAN,
                        OPT1,
                        OPT2,
                        OPT3,
                        PERIODE};
                rowTAGIHANRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTAGIHANRow);
                return rowTAGIHANRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TAGIHANDataTable cln = ((TAGIHANDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TAGIHANDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNO = base.Columns["NO"];
                this.columnAGENT = base.Columns["AGENT"];
                this.columnTGLDATANGINV = base.Columns["TGLDATANGINV"];
                this.columnTGLINV = base.Columns["TGLINV"];
                this.columnNOINV = base.Columns["NOINV"];
                this.columnJUMLAHTAGIHAN = base.Columns["JUMLAHTAGIHAN"];
                this.columnJUMLAHBAYAR = base.Columns["JUMLAHBAYAR"];
                this.columnSISA = base.Columns["SISA"];
                this.columnTGLBAYAR = base.Columns["TGLBAYAR"];
                this.columnKETERANGAN = base.Columns["KETERANGAN"];
                this.columnOPT1 = base.Columns["OPT1"];
                this.columnOPT2 = base.Columns["OPT2"];
                this.columnOPT3 = base.Columns["OPT3"];
                this.columnPERIODE = base.Columns["PERIODE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNO = new global::System.Data.DataColumn("NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO);
                this.columnAGENT = new global::System.Data.DataColumn("AGENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGENT);
                this.columnTGLDATANGINV = new global::System.Data.DataColumn("TGLDATANGINV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTGLDATANGINV);
                this.columnTGLINV = new global::System.Data.DataColumn("TGLINV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTGLINV);
                this.columnNOINV = new global::System.Data.DataColumn("NOINV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOINV);
                this.columnJUMLAHTAGIHAN = new global::System.Data.DataColumn("JUMLAHTAGIHAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJUMLAHTAGIHAN);
                this.columnJUMLAHBAYAR = new global::System.Data.DataColumn("JUMLAHBAYAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJUMLAHBAYAR);
                this.columnSISA = new global::System.Data.DataColumn("SISA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSISA);
                this.columnTGLBAYAR = new global::System.Data.DataColumn("TGLBAYAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTGLBAYAR);
                this.columnKETERANGAN = new global::System.Data.DataColumn("KETERANGAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKETERANGAN);
                this.columnOPT1 = new global::System.Data.DataColumn("OPT1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPT1);
                this.columnOPT2 = new global::System.Data.DataColumn("OPT2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPT2);
                this.columnOPT3 = new global::System.Data.DataColumn("OPT3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPT3);
                this.columnPERIODE = new global::System.Data.DataColumn("PERIODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERIODE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAGIHANRow NewTAGIHANRow() {
                return ((TAGIHANRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TAGIHANRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TAGIHANRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TAGIHANRowChanged != null)) {
                    this.TAGIHANRowChanged(this, new TAGIHANRowChangeEvent(((TAGIHANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TAGIHANRowChanging != null)) {
                    this.TAGIHANRowChanging(this, new TAGIHANRowChangeEvent(((TAGIHANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TAGIHANRowDeleted != null)) {
                    this.TAGIHANRowDeleted(this, new TAGIHANRowChangeEvent(((TAGIHANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TAGIHANRowDeleting != null)) {
                    this.TAGIHANRowDeleting(this, new TAGIHANRowChangeEvent(((TAGIHANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTAGIHANRow(TAGIHANRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSTAGIHAN ds = new DSTAGIHAN();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TAGIHANDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TAGIHANRow : global::System.Data.DataRow {
            
            private TAGIHANDataTable tableTAGIHAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TAGIHANRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTAGIHAN = ((TAGIHANDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NO {
                get {
                    try {
                        return ((string)(this[this.tableTAGIHAN.NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NO\' in table \'TAGIHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAGIHAN.NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AGENT {
                get {
                    try {
                        return ((string)(this[this.tableTAGIHAN.AGENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AGENT\' in table \'TAGIHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAGIHAN.AGENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TGLDATANGINV {
                get {
                    try {
                        return ((string)(this[this.tableTAGIHAN.TGLDATANGINVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TGLDATANGINV\' in table \'TAGIHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAGIHAN.TGLDATANGINVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TGLINV {
                get {
                    try {
                        return ((string)(this[this.tableTAGIHAN.TGLINVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TGLINV\' in table \'TAGIHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAGIHAN.TGLINVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOINV {
                get {
                    try {
                        return ((string)(this[this.tableTAGIHAN.NOINVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOINV\' in table \'TAGIHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAGIHAN.NOINVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JUMLAHTAGIHAN {
                get {
                    try {
                        return ((string)(this[this.tableTAGIHAN.JUMLAHTAGIHANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JUMLAHTAGIHAN\' in table \'TAGIHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAGIHAN.JUMLAHTAGIHANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JUMLAHBAYAR {
                get {
                    try {
                        return ((string)(this[this.tableTAGIHAN.JUMLAHBAYARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JUMLAHBAYAR\' in table \'TAGIHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAGIHAN.JUMLAHBAYARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SISA {
                get {
                    try {
                        return ((string)(this[this.tableTAGIHAN.SISAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SISA\' in table \'TAGIHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAGIHAN.SISAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TGLBAYAR {
                get {
                    try {
                        return ((string)(this[this.tableTAGIHAN.TGLBAYARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TGLBAYAR\' in table \'TAGIHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAGIHAN.TGLBAYARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KETERANGAN {
                get {
                    try {
                        return ((string)(this[this.tableTAGIHAN.KETERANGANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KETERANGAN\' in table \'TAGIHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAGIHAN.KETERANGANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OPT1 {
                get {
                    try {
                        return ((string)(this[this.tableTAGIHAN.OPT1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPT1\' in table \'TAGIHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAGIHAN.OPT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OPT2 {
                get {
                    try {
                        return ((string)(this[this.tableTAGIHAN.OPT2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPT2\' in table \'TAGIHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAGIHAN.OPT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OPT3 {
                get {
                    try {
                        return ((string)(this[this.tableTAGIHAN.OPT3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPT3\' in table \'TAGIHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAGIHAN.OPT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PERIODE {
                get {
                    try {
                        return ((string)(this[this.tableTAGIHAN.PERIODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PERIODE\' in table \'TAGIHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAGIHAN.PERIODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNONull() {
                return this.IsNull(this.tableTAGIHAN.NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNONull() {
                this[this.tableTAGIHAN.NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAGENTNull() {
                return this.IsNull(this.tableTAGIHAN.AGENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAGENTNull() {
                this[this.tableTAGIHAN.AGENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTGLDATANGINVNull() {
                return this.IsNull(this.tableTAGIHAN.TGLDATANGINVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTGLDATANGINVNull() {
                this[this.tableTAGIHAN.TGLDATANGINVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTGLINVNull() {
                return this.IsNull(this.tableTAGIHAN.TGLINVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTGLINVNull() {
                this[this.tableTAGIHAN.TGLINVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOINVNull() {
                return this.IsNull(this.tableTAGIHAN.NOINVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOINVNull() {
                this[this.tableTAGIHAN.NOINVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJUMLAHTAGIHANNull() {
                return this.IsNull(this.tableTAGIHAN.JUMLAHTAGIHANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJUMLAHTAGIHANNull() {
                this[this.tableTAGIHAN.JUMLAHTAGIHANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJUMLAHBAYARNull() {
                return this.IsNull(this.tableTAGIHAN.JUMLAHBAYARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJUMLAHBAYARNull() {
                this[this.tableTAGIHAN.JUMLAHBAYARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSISANull() {
                return this.IsNull(this.tableTAGIHAN.SISAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSISANull() {
                this[this.tableTAGIHAN.SISAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTGLBAYARNull() {
                return this.IsNull(this.tableTAGIHAN.TGLBAYARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTGLBAYARNull() {
                this[this.tableTAGIHAN.TGLBAYARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKETERANGANNull() {
                return this.IsNull(this.tableTAGIHAN.KETERANGANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKETERANGANNull() {
                this[this.tableTAGIHAN.KETERANGANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPT1Null() {
                return this.IsNull(this.tableTAGIHAN.OPT1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPT1Null() {
                this[this.tableTAGIHAN.OPT1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPT2Null() {
                return this.IsNull(this.tableTAGIHAN.OPT2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPT2Null() {
                this[this.tableTAGIHAN.OPT2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPT3Null() {
                return this.IsNull(this.tableTAGIHAN.OPT3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPT3Null() {
                this[this.tableTAGIHAN.OPT3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPERIODENull() {
                return this.IsNull(this.tableTAGIHAN.PERIODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPERIODENull() {
                this[this.tableTAGIHAN.PERIODEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TAGIHANRowChangeEvent : global::System.EventArgs {
            
            private TAGIHANRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAGIHANRowChangeEvent(TAGIHANRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAGIHANRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591