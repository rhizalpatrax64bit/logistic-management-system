//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LOGISTICMANAGAMENTSYSTEM.REPORTS.INVOICE {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsINVOICING")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsINVOICING : global::System.Data.DataSet {
        
        private V_INVOICECETAKDataTable tableV_INVOICECETAK;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsINVOICING() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsINVOICING(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["V_INVOICECETAK"] != null)) {
                    base.Tables.Add(new V_INVOICECETAKDataTable(ds.Tables["V_INVOICECETAK"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_INVOICECETAKDataTable V_INVOICECETAK {
            get {
                return this.tableV_INVOICECETAK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsINVOICING cln = ((dsINVOICING)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["V_INVOICECETAK"] != null)) {
                    base.Tables.Add(new V_INVOICECETAKDataTable(ds.Tables["V_INVOICECETAK"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableV_INVOICECETAK = ((V_INVOICECETAKDataTable)(base.Tables["V_INVOICECETAK"]));
            if ((initTable == true)) {
                if ((this.tableV_INVOICECETAK != null)) {
                    this.tableV_INVOICECETAK.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsINVOICING";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsINVOICING.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableV_INVOICECETAK = new V_INVOICECETAKDataTable();
            base.Tables.Add(this.tableV_INVOICECETAK);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeV_INVOICECETAK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsINVOICING ds = new dsINVOICING();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void V_INVOICECETAKRowChangeEventHandler(object sender, V_INVOICECETAKRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_INVOICECETAKDataTable : global::System.Data.TypedTableBase<V_INVOICECETAKRow> {
            
            private global::System.Data.DataColumn columnNOINVOICE;
            
            private global::System.Data.DataColumn columnNAMACUSTOMER;
            
            private global::System.Data.DataColumn columnSTARDATE;
            
            private global::System.Data.DataColumn columnENDDATE;
            
            private global::System.Data.DataColumn columnNOURUT;
            
            private global::System.Data.DataColumn columnDATESTT;
            
            private global::System.Data.DataColumn columnCONNOTENO;
            
            private global::System.Data.DataColumn columnDEST;
            
            private global::System.Data.DataColumn columnCONSIGNEE;
            
            private global::System.Data.DataColumn columnCOLLIE;
            
            private global::System.Data.DataColumn columnTYPE;
            
            private global::System.Data.DataColumn columnWEIGHT;
            
            private global::System.Data.DataColumn columnRATE;
            
            private global::System.Data.DataColumn columnPPN;
            
            private global::System.Data.DataColumn columnASURANSI;
            
            private global::System.Data.DataColumn columnPACKING;
            
            private global::System.Data.DataColumn columnSERVICE;
            
            private global::System.Data.DataColumn columnCHARGE;
            
            private global::System.Data.DataColumn columnARMADA;
            
            private global::System.Data.DataColumn columnTERBILANG;
            
            private global::System.Data.DataColumn columnKODE;
            
            private global::System.Data.DataColumn columnALAMAT;
            
            private global::System.Data.DataColumn columnTELP;
            
            private global::System.Data.DataColumn columnFAX;
            
            private global::System.Data.DataColumn columnCABANGBANK1;
            
            private global::System.Data.DataColumn columnCABANGBANK2;
            
            private global::System.Data.DataColumn columnNOREK1;
            
            private global::System.Data.DataColumn columnNOREK2;
            
            private global::System.Data.DataColumn columnATASNAMA1;
            
            private global::System.Data.DataColumn columnATASNAMA2;
            
            private global::System.Data.DataColumn columnNAMA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_INVOICECETAKDataTable() {
                this.TableName = "V_INVOICECETAK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_INVOICECETAKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected V_INVOICECETAKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOINVOICEColumn {
                get {
                    return this.columnNOINVOICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMACUSTOMERColumn {
                get {
                    return this.columnNAMACUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STARDATEColumn {
                get {
                    return this.columnSTARDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENDDATEColumn {
                get {
                    return this.columnENDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOURUTColumn {
                get {
                    return this.columnNOURUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATESTTColumn {
                get {
                    return this.columnDATESTT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONNOTENOColumn {
                get {
                    return this.columnCONNOTENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESTColumn {
                get {
                    return this.columnDEST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONSIGNEEColumn {
                get {
                    return this.columnCONSIGNEE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COLLIEColumn {
                get {
                    return this.columnCOLLIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WEIGHTColumn {
                get {
                    return this.columnWEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RATEColumn {
                get {
                    return this.columnRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PPNColumn {
                get {
                    return this.columnPPN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASURANSIColumn {
                get {
                    return this.columnASURANSI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACKINGColumn {
                get {
                    return this.columnPACKING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SERVICEColumn {
                get {
                    return this.columnSERVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHARGEColumn {
                get {
                    return this.columnCHARGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ARMADAColumn {
                get {
                    return this.columnARMADA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TERBILANGColumn {
                get {
                    return this.columnTERBILANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KODEColumn {
                get {
                    return this.columnKODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ALAMATColumn {
                get {
                    return this.columnALAMAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TELPColumn {
                get {
                    return this.columnTELP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FAXColumn {
                get {
                    return this.columnFAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CABANGBANK1Column {
                get {
                    return this.columnCABANGBANK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CABANGBANK2Column {
                get {
                    return this.columnCABANGBANK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOREK1Column {
                get {
                    return this.columnNOREK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOREK2Column {
                get {
                    return this.columnNOREK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATASNAMA1Column {
                get {
                    return this.columnATASNAMA1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATASNAMA2Column {
                get {
                    return this.columnATASNAMA2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMAColumn {
                get {
                    return this.columnNAMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_INVOICECETAKRow this[int index] {
                get {
                    return ((V_INVOICECETAKRow)(this.Rows[index]));
                }
            }
            
            public event V_INVOICECETAKRowChangeEventHandler V_INVOICECETAKRowChanging;
            
            public event V_INVOICECETAKRowChangeEventHandler V_INVOICECETAKRowChanged;
            
            public event V_INVOICECETAKRowChangeEventHandler V_INVOICECETAKRowDeleting;
            
            public event V_INVOICECETAKRowChangeEventHandler V_INVOICECETAKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddV_INVOICECETAKRow(V_INVOICECETAKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_INVOICECETAKRow AddV_INVOICECETAKRow(
                        string NOINVOICE, 
                        string NAMACUSTOMER, 
                        string STARDATE, 
                        string ENDDATE, 
                        string NOURUT, 
                        string DATESTT, 
                        string CONNOTENO, 
                        string DEST, 
                        string CONSIGNEE, 
                        string COLLIE, 
                        string TYPE, 
                        string WEIGHT, 
                        string RATE, 
                        string PPN, 
                        string ASURANSI, 
                        string PACKING, 
                        string SERVICE, 
                        string CHARGE, 
                        string ARMADA, 
                        string TERBILANG, 
                        string KODE, 
                        string ALAMAT, 
                        string TELP, 
                        string FAX, 
                        string CABANGBANK1, 
                        string CABANGBANK2, 
                        string NOREK1, 
                        string NOREK2, 
                        string ATASNAMA1, 
                        string ATASNAMA2, 
                        string NAMA) {
                V_INVOICECETAKRow rowV_INVOICECETAKRow = ((V_INVOICECETAKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOINVOICE,
                        NAMACUSTOMER,
                        STARDATE,
                        ENDDATE,
                        NOURUT,
                        DATESTT,
                        CONNOTENO,
                        DEST,
                        CONSIGNEE,
                        COLLIE,
                        TYPE,
                        WEIGHT,
                        RATE,
                        PPN,
                        ASURANSI,
                        PACKING,
                        SERVICE,
                        CHARGE,
                        ARMADA,
                        TERBILANG,
                        KODE,
                        ALAMAT,
                        TELP,
                        FAX,
                        CABANGBANK1,
                        CABANGBANK2,
                        NOREK1,
                        NOREK2,
                        ATASNAMA1,
                        ATASNAMA2,
                        NAMA};
                rowV_INVOICECETAKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_INVOICECETAKRow);
                return rowV_INVOICECETAKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                V_INVOICECETAKDataTable cln = ((V_INVOICECETAKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_INVOICECETAKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNOINVOICE = base.Columns["NOINVOICE"];
                this.columnNAMACUSTOMER = base.Columns["NAMACUSTOMER"];
                this.columnSTARDATE = base.Columns["STARDATE"];
                this.columnENDDATE = base.Columns["ENDDATE"];
                this.columnNOURUT = base.Columns["NOURUT"];
                this.columnDATESTT = base.Columns["DATESTT"];
                this.columnCONNOTENO = base.Columns["CONNOTENO"];
                this.columnDEST = base.Columns["DEST"];
                this.columnCONSIGNEE = base.Columns["CONSIGNEE"];
                this.columnCOLLIE = base.Columns["COLLIE"];
                this.columnTYPE = base.Columns["TYPE"];
                this.columnWEIGHT = base.Columns["WEIGHT"];
                this.columnRATE = base.Columns["RATE"];
                this.columnPPN = base.Columns["PPN"];
                this.columnASURANSI = base.Columns["ASURANSI"];
                this.columnPACKING = base.Columns["PACKING"];
                this.columnSERVICE = base.Columns["SERVICE"];
                this.columnCHARGE = base.Columns["CHARGE"];
                this.columnARMADA = base.Columns["ARMADA"];
                this.columnTERBILANG = base.Columns["TERBILANG"];
                this.columnKODE = base.Columns["KODE"];
                this.columnALAMAT = base.Columns["ALAMAT"];
                this.columnTELP = base.Columns["TELP"];
                this.columnFAX = base.Columns["FAX"];
                this.columnCABANGBANK1 = base.Columns["CABANGBANK1"];
                this.columnCABANGBANK2 = base.Columns["CABANGBANK2"];
                this.columnNOREK1 = base.Columns["NOREK1"];
                this.columnNOREK2 = base.Columns["NOREK2"];
                this.columnATASNAMA1 = base.Columns["ATASNAMA1"];
                this.columnATASNAMA2 = base.Columns["ATASNAMA2"];
                this.columnNAMA = base.Columns["NAMA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNOINVOICE = new global::System.Data.DataColumn("NOINVOICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOINVOICE);
                this.columnNAMACUSTOMER = new global::System.Data.DataColumn("NAMACUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAMACUSTOMER);
                this.columnSTARDATE = new global::System.Data.DataColumn("STARDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTARDATE);
                this.columnENDDATE = new global::System.Data.DataColumn("ENDDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENDDATE);
                this.columnNOURUT = new global::System.Data.DataColumn("NOURUT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOURUT);
                this.columnDATESTT = new global::System.Data.DataColumn("DATESTT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATESTT);
                this.columnCONNOTENO = new global::System.Data.DataColumn("CONNOTENO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONNOTENO);
                this.columnDEST = new global::System.Data.DataColumn("DEST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEST);
                this.columnCONSIGNEE = new global::System.Data.DataColumn("CONSIGNEE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONSIGNEE);
                this.columnCOLLIE = new global::System.Data.DataColumn("COLLIE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLIE);
                this.columnTYPE = new global::System.Data.DataColumn("TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE);
                this.columnWEIGHT = new global::System.Data.DataColumn("WEIGHT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEIGHT);
                this.columnRATE = new global::System.Data.DataColumn("RATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE);
                this.columnPPN = new global::System.Data.DataColumn("PPN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPPN);
                this.columnASURANSI = new global::System.Data.DataColumn("ASURANSI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASURANSI);
                this.columnPACKING = new global::System.Data.DataColumn("PACKING", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACKING);
                this.columnSERVICE = new global::System.Data.DataColumn("SERVICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE);
                this.columnCHARGE = new global::System.Data.DataColumn("CHARGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARGE);
                this.columnARMADA = new global::System.Data.DataColumn("ARMADA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARMADA);
                this.columnTERBILANG = new global::System.Data.DataColumn("TERBILANG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERBILANG);
                this.columnKODE = new global::System.Data.DataColumn("KODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKODE);
                this.columnALAMAT = new global::System.Data.DataColumn("ALAMAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALAMAT);
                this.columnTELP = new global::System.Data.DataColumn("TELP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELP);
                this.columnFAX = new global::System.Data.DataColumn("FAX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAX);
                this.columnCABANGBANK1 = new global::System.Data.DataColumn("CABANGBANK1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCABANGBANK1);
                this.columnCABANGBANK2 = new global::System.Data.DataColumn("CABANGBANK2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCABANGBANK2);
                this.columnNOREK1 = new global::System.Data.DataColumn("NOREK1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOREK1);
                this.columnNOREK2 = new global::System.Data.DataColumn("NOREK2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOREK2);
                this.columnATASNAMA1 = new global::System.Data.DataColumn("ATASNAMA1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATASNAMA1);
                this.columnATASNAMA2 = new global::System.Data.DataColumn("ATASNAMA2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATASNAMA2);
                this.columnNAMA = new global::System.Data.DataColumn("NAMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAMA);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_INVOICECETAKRow NewV_INVOICECETAKRow() {
                return ((V_INVOICECETAKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_INVOICECETAKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(V_INVOICECETAKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_INVOICECETAKRowChanged != null)) {
                    this.V_INVOICECETAKRowChanged(this, new V_INVOICECETAKRowChangeEvent(((V_INVOICECETAKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_INVOICECETAKRowChanging != null)) {
                    this.V_INVOICECETAKRowChanging(this, new V_INVOICECETAKRowChangeEvent(((V_INVOICECETAKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_INVOICECETAKRowDeleted != null)) {
                    this.V_INVOICECETAKRowDeleted(this, new V_INVOICECETAKRowChangeEvent(((V_INVOICECETAKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_INVOICECETAKRowDeleting != null)) {
                    this.V_INVOICECETAKRowDeleting(this, new V_INVOICECETAKRowChangeEvent(((V_INVOICECETAKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveV_INVOICECETAKRow(V_INVOICECETAKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsINVOICING ds = new dsINVOICING();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_INVOICECETAKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class V_INVOICECETAKRow : global::System.Data.DataRow {
            
            private V_INVOICECETAKDataTable tableV_INVOICECETAK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_INVOICECETAKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_INVOICECETAK = ((V_INVOICECETAKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOINVOICE {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.NOINVOICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOINVOICE\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.NOINVOICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAMACUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.NAMACUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAMACUSTOMER\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.NAMACUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STARDATE {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.STARDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STARDATE\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.STARDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENDDATE {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.ENDDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENDDATE\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.ENDDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOURUT {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.NOURUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOURUT\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.NOURUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATESTT {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.DATESTTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATESTT\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.DATESTTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONNOTENO {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.CONNOTENOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONNOTENO\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.CONNOTENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEST {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.DESTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEST\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.DESTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONSIGNEE {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.CONSIGNEEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONSIGNEE\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.CONSIGNEEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COLLIE {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.COLLIEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLLIE\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.COLLIEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WEIGHT {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.WEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WEIGHT\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.WEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RATE {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RATE\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PPN {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.PPNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PPN\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.PPNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ASURANSI {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.ASURANSIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASURANSI\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.ASURANSIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PACKING {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.PACKINGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PACKING\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.PACKINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVICE {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.SERVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SERVICE\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.SERVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CHARGE {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.CHARGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARGE\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.CHARGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ARMADA {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.ARMADAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ARMADA\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.ARMADAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TERBILANG {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.TERBILANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TERBILANG\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.TERBILANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KODE {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.KODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KODE\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.KODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ALAMAT {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.ALAMATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ALAMAT\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.ALAMATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TELP {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.TELPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TELP\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.TELPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAX {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.FAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FAX\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.FAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CABANGBANK1 {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.CABANGBANK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CABANGBANK1\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.CABANGBANK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CABANGBANK2 {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.CABANGBANK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CABANGBANK2\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.CABANGBANK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOREK1 {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.NOREK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOREK1\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.NOREK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOREK2 {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.NOREK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOREK2\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.NOREK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATASNAMA1 {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.ATASNAMA1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ATASNAMA1\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.ATASNAMA1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATASNAMA2 {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.ATASNAMA2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ATASNAMA2\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.ATASNAMA2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAMA {
                get {
                    try {
                        return ((string)(this[this.tableV_INVOICECETAK.NAMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAMA\' in table \'V_INVOICECETAK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_INVOICECETAK.NAMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOINVOICENull() {
                return this.IsNull(this.tableV_INVOICECETAK.NOINVOICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOINVOICENull() {
                this[this.tableV_INVOICECETAK.NOINVOICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMACUSTOMERNull() {
                return this.IsNull(this.tableV_INVOICECETAK.NAMACUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMACUSTOMERNull() {
                this[this.tableV_INVOICECETAK.NAMACUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTARDATENull() {
                return this.IsNull(this.tableV_INVOICECETAK.STARDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTARDATENull() {
                this[this.tableV_INVOICECETAK.STARDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENDDATENull() {
                return this.IsNull(this.tableV_INVOICECETAK.ENDDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENDDATENull() {
                this[this.tableV_INVOICECETAK.ENDDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOURUTNull() {
                return this.IsNull(this.tableV_INVOICECETAK.NOURUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOURUTNull() {
                this[this.tableV_INVOICECETAK.NOURUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATESTTNull() {
                return this.IsNull(this.tableV_INVOICECETAK.DATESTTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATESTTNull() {
                this[this.tableV_INVOICECETAK.DATESTTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONNOTENONull() {
                return this.IsNull(this.tableV_INVOICECETAK.CONNOTENOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONNOTENONull() {
                this[this.tableV_INVOICECETAK.CONNOTENOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESTNull() {
                return this.IsNull(this.tableV_INVOICECETAK.DESTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESTNull() {
                this[this.tableV_INVOICECETAK.DESTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONSIGNEENull() {
                return this.IsNull(this.tableV_INVOICECETAK.CONSIGNEEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONSIGNEENull() {
                this[this.tableV_INVOICECETAK.CONSIGNEEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOLLIENull() {
                return this.IsNull(this.tableV_INVOICECETAK.COLLIEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOLLIENull() {
                this[this.tableV_INVOICECETAK.COLLIEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPENull() {
                return this.IsNull(this.tableV_INVOICECETAK.TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPENull() {
                this[this.tableV_INVOICECETAK.TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWEIGHTNull() {
                return this.IsNull(this.tableV_INVOICECETAK.WEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWEIGHTNull() {
                this[this.tableV_INVOICECETAK.WEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRATENull() {
                return this.IsNull(this.tableV_INVOICECETAK.RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRATENull() {
                this[this.tableV_INVOICECETAK.RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPPNNull() {
                return this.IsNull(this.tableV_INVOICECETAK.PPNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPPNNull() {
                this[this.tableV_INVOICECETAK.PPNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASURANSINull() {
                return this.IsNull(this.tableV_INVOICECETAK.ASURANSIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASURANSINull() {
                this[this.tableV_INVOICECETAK.ASURANSIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACKINGNull() {
                return this.IsNull(this.tableV_INVOICECETAK.PACKINGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACKINGNull() {
                this[this.tableV_INVOICECETAK.PACKINGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICENull() {
                return this.IsNull(this.tableV_INVOICECETAK.SERVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICENull() {
                this[this.tableV_INVOICECETAK.SERVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHARGENull() {
                return this.IsNull(this.tableV_INVOICECETAK.CHARGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHARGENull() {
                this[this.tableV_INVOICECETAK.CHARGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsARMADANull() {
                return this.IsNull(this.tableV_INVOICECETAK.ARMADAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetARMADANull() {
                this[this.tableV_INVOICECETAK.ARMADAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTERBILANGNull() {
                return this.IsNull(this.tableV_INVOICECETAK.TERBILANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTERBILANGNull() {
                this[this.tableV_INVOICECETAK.TERBILANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKODENull() {
                return this.IsNull(this.tableV_INVOICECETAK.KODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKODENull() {
                this[this.tableV_INVOICECETAK.KODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsALAMATNull() {
                return this.IsNull(this.tableV_INVOICECETAK.ALAMATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetALAMATNull() {
                this[this.tableV_INVOICECETAK.ALAMATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTELPNull() {
                return this.IsNull(this.tableV_INVOICECETAK.TELPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTELPNull() {
                this[this.tableV_INVOICECETAK.TELPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFAXNull() {
                return this.IsNull(this.tableV_INVOICECETAK.FAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFAXNull() {
                this[this.tableV_INVOICECETAK.FAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCABANGBANK1Null() {
                return this.IsNull(this.tableV_INVOICECETAK.CABANGBANK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCABANGBANK1Null() {
                this[this.tableV_INVOICECETAK.CABANGBANK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCABANGBANK2Null() {
                return this.IsNull(this.tableV_INVOICECETAK.CABANGBANK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCABANGBANK2Null() {
                this[this.tableV_INVOICECETAK.CABANGBANK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOREK1Null() {
                return this.IsNull(this.tableV_INVOICECETAK.NOREK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOREK1Null() {
                this[this.tableV_INVOICECETAK.NOREK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOREK2Null() {
                return this.IsNull(this.tableV_INVOICECETAK.NOREK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOREK2Null() {
                this[this.tableV_INVOICECETAK.NOREK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATASNAMA1Null() {
                return this.IsNull(this.tableV_INVOICECETAK.ATASNAMA1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATASNAMA1Null() {
                this[this.tableV_INVOICECETAK.ATASNAMA1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATASNAMA2Null() {
                return this.IsNull(this.tableV_INVOICECETAK.ATASNAMA2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATASNAMA2Null() {
                this[this.tableV_INVOICECETAK.ATASNAMA2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMANull() {
                return this.IsNull(this.tableV_INVOICECETAK.NAMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMANull() {
                this[this.tableV_INVOICECETAK.NAMAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class V_INVOICECETAKRowChangeEvent : global::System.EventArgs {
            
            private V_INVOICECETAKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_INVOICECETAKRowChangeEvent(V_INVOICECETAKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_INVOICECETAKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591