//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LOGISTICMANAGAMENTSYSTEM.REPORTS.INVOICE {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSINVOICE")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSINVOICE : global::System.Data.DataSet {
        
        private V_STTDataTable tableV_STT;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSINVOICE() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSINVOICE(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["V_STT"] != null)) {
                    base.Tables.Add(new V_STTDataTable(ds.Tables["V_STT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_STTDataTable V_STT {
            get {
                return this.tableV_STT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSINVOICE cln = ((DSINVOICE)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["V_STT"] != null)) {
                    base.Tables.Add(new V_STTDataTable(ds.Tables["V_STT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableV_STT = ((V_STTDataTable)(base.Tables["V_STT"]));
            if ((initTable == true)) {
                if ((this.tableV_STT != null)) {
                    this.tableV_STT.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSINVOICE";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSINVOICE.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableV_STT = new V_STTDataTable();
            base.Tables.Add(this.tableV_STT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeV_STT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSINVOICE ds = new DSINVOICE();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void V_STTRowChangeEventHandler(object sender, V_STTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_STTDataTable : global::System.Data.TypedTableBase<V_STTRow> {
            
            private global::System.Data.DataColumn columnNO;
            
            private global::System.Data.DataColumn columnSTARTDATE;
            
            private global::System.Data.DataColumn columnENDDATE;
            
            private global::System.Data.DataColumn columnDATE;
            
            private global::System.Data.DataColumn columnTPAYMENT;
            
            private global::System.Data.DataColumn columnSTT;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnPENERIMA;
            
            private global::System.Data.DataColumn columnMARKETING;
            
            private global::System.Data.DataColumn columnFEEMKRT;
            
            private global::System.Data.DataColumn columnRC;
            
            private global::System.Data.DataColumn columnDEST;
            
            private global::System.Data.DataColumn columnSERVICE;
            
            private global::System.Data.DataColumn columnARMADA;
            
            private global::System.Data.DataColumn columnCOLLY;
            
            private global::System.Data.DataColumn columnBERAT;
            
            private global::System.Data.DataColumn columnRATE;
            
            private global::System.Data.DataColumn columnCHARGE;
            
            private global::System.Data.DataColumn columnOTHER;
            
            private global::System.Data.DataColumn columnTOTAL;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnOPT1;
            
            private global::System.Data.DataColumn columnOPT2;
            
            private global::System.Data.DataColumn columnOPT3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_STTDataTable() {
                this.TableName = "V_STT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_STTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected V_STTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOColumn {
                get {
                    return this.columnNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STARTDATEColumn {
                get {
                    return this.columnSTARTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENDDATEColumn {
                get {
                    return this.columnENDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATEColumn {
                get {
                    return this.columnDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TPAYMENTColumn {
                get {
                    return this.columnTPAYMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STTColumn {
                get {
                    return this.columnSTT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PENERIMAColumn {
                get {
                    return this.columnPENERIMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MARKETINGColumn {
                get {
                    return this.columnMARKETING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEEMKRTColumn {
                get {
                    return this.columnFEEMKRT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RCColumn {
                get {
                    return this.columnRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESTColumn {
                get {
                    return this.columnDEST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SERVICEColumn {
                get {
                    return this.columnSERVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ARMADAColumn {
                get {
                    return this.columnARMADA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COLLYColumn {
                get {
                    return this.columnCOLLY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BERATColumn {
                get {
                    return this.columnBERAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RATEColumn {
                get {
                    return this.columnRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHARGEColumn {
                get {
                    return this.columnCHARGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OTHERColumn {
                get {
                    return this.columnOTHER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TOTALColumn {
                get {
                    return this.columnTOTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPT1Column {
                get {
                    return this.columnOPT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPT2Column {
                get {
                    return this.columnOPT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPT3Column {
                get {
                    return this.columnOPT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_STTRow this[int index] {
                get {
                    return ((V_STTRow)(this.Rows[index]));
                }
            }
            
            public event V_STTRowChangeEventHandler V_STTRowChanging;
            
            public event V_STTRowChangeEventHandler V_STTRowChanged;
            
            public event V_STTRowChangeEventHandler V_STTRowDeleting;
            
            public event V_STTRowChangeEventHandler V_STTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddV_STTRow(V_STTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_STTRow AddV_STTRow(
                        string NO, 
                        string STARTDATE, 
                        string ENDDATE, 
                        string DATE, 
                        string TPAYMENT, 
                        string STT, 
                        string CUSTOMER, 
                        string PENERIMA, 
                        string MARKETING, 
                        string FEEMKRT, 
                        string RC, 
                        string DEST, 
                        string SERVICE, 
                        string ARMADA, 
                        string COLLY, 
                        string BERAT, 
                        string RATE, 
                        string CHARGE, 
                        string OTHER, 
                        string TOTAL, 
                        string STATUS, 
                        string OPT1, 
                        string OPT2, 
                        string OPT3) {
                V_STTRow rowV_STTRow = ((V_STTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NO,
                        STARTDATE,
                        ENDDATE,
                        DATE,
                        TPAYMENT,
                        STT,
                        CUSTOMER,
                        PENERIMA,
                        MARKETING,
                        FEEMKRT,
                        RC,
                        DEST,
                        SERVICE,
                        ARMADA,
                        COLLY,
                        BERAT,
                        RATE,
                        CHARGE,
                        OTHER,
                        TOTAL,
                        STATUS,
                        OPT1,
                        OPT2,
                        OPT3};
                rowV_STTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_STTRow);
                return rowV_STTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                V_STTDataTable cln = ((V_STTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_STTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNO = base.Columns["NO"];
                this.columnSTARTDATE = base.Columns["STARTDATE"];
                this.columnENDDATE = base.Columns["ENDDATE"];
                this.columnDATE = base.Columns["DATE"];
                this.columnTPAYMENT = base.Columns["TPAYMENT"];
                this.columnSTT = base.Columns["STT"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnPENERIMA = base.Columns["PENERIMA"];
                this.columnMARKETING = base.Columns["MARKETING"];
                this.columnFEEMKRT = base.Columns["FEEMKRT"];
                this.columnRC = base.Columns["RC"];
                this.columnDEST = base.Columns["DEST"];
                this.columnSERVICE = base.Columns["SERVICE"];
                this.columnARMADA = base.Columns["ARMADA"];
                this.columnCOLLY = base.Columns["COLLY"];
                this.columnBERAT = base.Columns["BERAT"];
                this.columnRATE = base.Columns["RATE"];
                this.columnCHARGE = base.Columns["CHARGE"];
                this.columnOTHER = base.Columns["OTHER"];
                this.columnTOTAL = base.Columns["TOTAL"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnOPT1 = base.Columns["OPT1"];
                this.columnOPT2 = base.Columns["OPT2"];
                this.columnOPT3 = base.Columns["OPT3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNO = new global::System.Data.DataColumn("NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO);
                this.columnSTARTDATE = new global::System.Data.DataColumn("STARTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTARTDATE);
                this.columnENDDATE = new global::System.Data.DataColumn("ENDDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENDDATE);
                this.columnDATE = new global::System.Data.DataColumn("DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE);
                this.columnTPAYMENT = new global::System.Data.DataColumn("TPAYMENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTPAYMENT);
                this.columnSTT = new global::System.Data.DataColumn("STT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTT);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnPENERIMA = new global::System.Data.DataColumn("PENERIMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPENERIMA);
                this.columnMARKETING = new global::System.Data.DataColumn("MARKETING", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMARKETING);
                this.columnFEEMKRT = new global::System.Data.DataColumn("FEEMKRT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEEMKRT);
                this.columnRC = new global::System.Data.DataColumn("RC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRC);
                this.columnDEST = new global::System.Data.DataColumn("DEST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEST);
                this.columnSERVICE = new global::System.Data.DataColumn("SERVICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE);
                this.columnARMADA = new global::System.Data.DataColumn("ARMADA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARMADA);
                this.columnCOLLY = new global::System.Data.DataColumn("COLLY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLY);
                this.columnBERAT = new global::System.Data.DataColumn("BERAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBERAT);
                this.columnRATE = new global::System.Data.DataColumn("RATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE);
                this.columnCHARGE = new global::System.Data.DataColumn("CHARGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARGE);
                this.columnOTHER = new global::System.Data.DataColumn("OTHER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHER);
                this.columnTOTAL = new global::System.Data.DataColumn("TOTAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnOPT1 = new global::System.Data.DataColumn("OPT1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPT1);
                this.columnOPT2 = new global::System.Data.DataColumn("OPT2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPT2);
                this.columnOPT3 = new global::System.Data.DataColumn("OPT3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPT3);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_STTRow NewV_STTRow() {
                return ((V_STTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_STTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(V_STTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_STTRowChanged != null)) {
                    this.V_STTRowChanged(this, new V_STTRowChangeEvent(((V_STTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_STTRowChanging != null)) {
                    this.V_STTRowChanging(this, new V_STTRowChangeEvent(((V_STTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_STTRowDeleted != null)) {
                    this.V_STTRowDeleted(this, new V_STTRowChangeEvent(((V_STTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_STTRowDeleting != null)) {
                    this.V_STTRowDeleting(this, new V_STTRowChangeEvent(((V_STTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveV_STTRow(V_STTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSINVOICE ds = new DSINVOICE();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_STTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class V_STTRow : global::System.Data.DataRow {
            
            private V_STTDataTable tableV_STT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal V_STTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_STT = ((V_STTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NO {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NO\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STARTDATE {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.STARTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STARTDATE\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.STARTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENDDATE {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.ENDDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENDDATE\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.ENDDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATE {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TPAYMENT {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.TPAYMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TPAYMENT\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.TPAYMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STT {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.STTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STT\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.STTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PENERIMA {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.PENERIMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PENERIMA\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.PENERIMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MARKETING {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.MARKETINGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MARKETING\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.MARKETINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FEEMKRT {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.FEEMKRTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FEEMKRT\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.FEEMKRTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RC {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.RCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RC\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.RCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEST {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.DESTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEST\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.DESTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVICE {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.SERVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SERVICE\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.SERVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ARMADA {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.ARMADAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ARMADA\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.ARMADAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COLLY {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.COLLYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLLY\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.COLLYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BERAT {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.BERATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BERAT\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.BERATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RATE {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RATE\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CHARGE {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.CHARGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARGE\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.CHARGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OTHER {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.OTHERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OTHER\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.OTHERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TOTAL {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.TOTALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAL\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.TOTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATUS\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OPT1 {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.OPT1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPT1\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.OPT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OPT2 {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.OPT2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPT2\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.OPT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OPT3 {
                get {
                    try {
                        return ((string)(this[this.tableV_STT.OPT3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPT3\' in table \'V_STT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableV_STT.OPT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNONull() {
                return this.IsNull(this.tableV_STT.NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNONull() {
                this[this.tableV_STT.NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTARTDATENull() {
                return this.IsNull(this.tableV_STT.STARTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTARTDATENull() {
                this[this.tableV_STT.STARTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENDDATENull() {
                return this.IsNull(this.tableV_STT.ENDDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENDDATENull() {
                this[this.tableV_STT.ENDDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATENull() {
                return this.IsNull(this.tableV_STT.DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATENull() {
                this[this.tableV_STT.DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTPAYMENTNull() {
                return this.IsNull(this.tableV_STT.TPAYMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTPAYMENTNull() {
                this[this.tableV_STT.TPAYMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTTNull() {
                return this.IsNull(this.tableV_STT.STTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTTNull() {
                this[this.tableV_STT.STTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tableV_STT.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMERNull() {
                this[this.tableV_STT.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPENERIMANull() {
                return this.IsNull(this.tableV_STT.PENERIMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPENERIMANull() {
                this[this.tableV_STT.PENERIMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMARKETINGNull() {
                return this.IsNull(this.tableV_STT.MARKETINGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMARKETINGNull() {
                this[this.tableV_STT.MARKETINGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEEMKRTNull() {
                return this.IsNull(this.tableV_STT.FEEMKRTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEEMKRTNull() {
                this[this.tableV_STT.FEEMKRTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRCNull() {
                return this.IsNull(this.tableV_STT.RCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRCNull() {
                this[this.tableV_STT.RCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESTNull() {
                return this.IsNull(this.tableV_STT.DESTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESTNull() {
                this[this.tableV_STT.DESTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICENull() {
                return this.IsNull(this.tableV_STT.SERVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICENull() {
                this[this.tableV_STT.SERVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsARMADANull() {
                return this.IsNull(this.tableV_STT.ARMADAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetARMADANull() {
                this[this.tableV_STT.ARMADAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOLLYNull() {
                return this.IsNull(this.tableV_STT.COLLYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOLLYNull() {
                this[this.tableV_STT.COLLYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBERATNull() {
                return this.IsNull(this.tableV_STT.BERATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBERATNull() {
                this[this.tableV_STT.BERATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRATENull() {
                return this.IsNull(this.tableV_STT.RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRATENull() {
                this[this.tableV_STT.RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHARGENull() {
                return this.IsNull(this.tableV_STT.CHARGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHARGENull() {
                this[this.tableV_STT.CHARGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOTHERNull() {
                return this.IsNull(this.tableV_STT.OTHERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOTHERNull() {
                this[this.tableV_STT.OTHERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOTALNull() {
                return this.IsNull(this.tableV_STT.TOTALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOTALNull() {
                this[this.tableV_STT.TOTALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableV_STT.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableV_STT.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPT1Null() {
                return this.IsNull(this.tableV_STT.OPT1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPT1Null() {
                this[this.tableV_STT.OPT1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPT2Null() {
                return this.IsNull(this.tableV_STT.OPT2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPT2Null() {
                this[this.tableV_STT.OPT2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPT3Null() {
                return this.IsNull(this.tableV_STT.OPT3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPT3Null() {
                this[this.tableV_STT.OPT3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class V_STTRowChangeEvent : global::System.EventArgs {
            
            private V_STTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_STTRowChangeEvent(V_STTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public V_STTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591